/*
 *   Copyright 2003-2004 The Apache Software Foundation.
// (c) Copyright IBM Corp. 2004, 2005 All Rights Reserved
 *
 *   Licensed under the Apache License, Version 2.0 (the "License");
 *   you may not use this file except in compliance with the License.
 *   You may obtain a copy of the License at
 *
 *       http://www.apache.org/licenses/LICENSE-2.0
 *
 *   Unless required by applicable law or agreed to in writing, software
 *   distributed under the License is distributed on an "AS IS" BASIS,
 *   WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 *   See the License for the specific language governing permissions and
 *   limitations under the License.
 */
#ifndef OTHERFAULTEXCEPTION_INCLUDED
#define OTHERFAULTEXCEPTION_INCLUDED

/* !!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!! */
/* NOTE NOTE NOTE NOTE NOTE NOTE NOTE NOTE NOTE NOTE NOTE NOTE NOTE   */
/* ----------------------------------------------------------------   */
/* THIS HEADER FILE PATTERNED AFTER CORRESPONDING hpp HEADER FILE.    */
/* CHANGES TO hpp HEADER FILE MAY NEED TO BE PROPAGATED HERE AND IN   */
/* THE IMPLEMEMTATION OF THE C APIS.                                  */
/*                                                                    */
/* THIS FILE GENERATED BY CBINDINGGENERATOR TOOL.                     */
/* ----------------------------------------------------------------   */
/* NOTE NOTE NOTE NOTE NOTE NOTE NOTE NOTE NOTE NOTE NOTE NOTE NOTE   */
/* !!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!! */

#ifdef __cplusplus
 extern "C" {
#endif


#include <axis/GDefine.h>
#include <axis/SoapFaultException.h>

/**
 * @file OtherFaultException.hpp
 */
/**
 * @class OtherFaultException
 * @brief A server-generated soap fault exception
 * 
 * An exception thrown back to a client application that represents a soap
 * fault generated by the server.
 * 
 */
/**
     * Default constructor
     */

/**
     * Constructor
     * 
     * @param code is the SOAP faultcode
     * @param string is the SOAP faultstring
     * @param actor is the SOAP faultactor
     * @param detail is the SOAP fault detail
     * @param exceptionCode is the axis exception code
     */
AXISC_STORAGE_CLASS_INFO AXISCHANDLE axiscCreateOtherFaultException(const AxiscChar * code, 
	const AxiscChar * string, const AxiscChar * actor, 
	const AxiscChar * detail, int exceptionCode);

/**
     * Copy constructor
     * 
     * @param ae is the AxisException to be copied
     */

/**
     * Copy constructor
     * 
     * @param copy is the OtherFaultException to be copied
     */

/**
     * Assignment operator
     * 
     * @param other is the OtherFaultException to be copied
     * @return reference to this
     */
AXISC_STORAGE_CLASS_INFO AXISCHANDLE axiscOperator=OtherFaultExceptionOtherFaultException(AXISCHANDLE otherFaultException, AXISCHANDLE other);

/**
     * Destructor
     */
AXISC_STORAGE_CLASS_INFO void axiscDestroyOtherFaultException(AXISCHANDLE otherFaultException);

/**
     * Returns the SOAP fault detail
     * 
     * @return fault detail
     */
AXISC_STORAGE_CLASS_INFO const AxiscChar * axiscGetFaultDetail(AXISCHANDLE otherFaultException);

/**
     * Set SOAP fault detail
     * 
     * @param detail is the SOAP fault detail
     */
AXISC_STORAGE_CLASS_INFO void axiscSetFaultDetailOtherFaultException(AXISCHANDLE otherFaultException, const AxiscChar * detail);

/**
     * SOAP fault detail
     */


#ifdef __cplusplus
 }
#endif

#endif /* OTHERFAULTEXCEPTION_INCLUDED */
